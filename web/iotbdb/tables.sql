/*SCRIPT TO EXECUTE TO CREATE ALL TABLES NEEDED FOR IOTBAY DATABASE*/
CREATE TABLE USERTABLE(
    userID int NOT NULL GENERATED ALWAYS AS IDENTITY(START WITH 1000, INCREMENT BY 1), 
    firstName varchar(30) NOT NULL,
    lastName varchar(30) NOT NULL,
    password varchar(50) NOT NULL,
    dob date NOT NULL,
    phoneNumber varchar(20) NOT NULL,
    emailAddress varchar(50) NOT NULL,
    streetNumber int,
    streetName varchar(20),
    postCode int,
    PRIMARY KEY (userID)
);

CREATE TABLE STAFFTABLE(
    userID int NOT NULL, 
    staffID int NOT NULL GENERATED ALWAYS AS IDENTITY(START WITH 2000, INCREMENT BY 1),
    authorised boolean,
    PRIMARY KEY (staffID),
    FOREIGN KEY (userID) REFERENCES USERTABLE(userID)
);

CREATE TABLE APPLICATIONLOGTABLE(
    LogID int NOT NULL GENERATED ALWAYS AS IDENTITY(START WITH 2100, INCREMENT BY 1),
    userID int NOT NULL, 
    PRIMARY KEY (LogID),
    FOREIGN KEY (userID) REFERENCES USERTABLE(userID),
);

CREATE TABLE CUSTOMERTABLE(
    userID int NOT NULL, 
    customerID int NOT NULL GENERATED ALWAYS AS IDENTITY(START WITH 4000, INCREMENT BY 1),
    orderID int NOT NULL,
    registered boolean,
    PRIMARY KEY (customerID),
    FOREIGN KEY (userID) REFERENCES USERTABLE(userID)
);

CREATE TABLE ORDERLINETABLE(
    orderID int NOT NULL, 
    productID int NOT NULL,
    PRIMARY KEY (orderID,productID)
);

CREATE TABLE ORDERTABLE(
    orderID int NOT NULL GENERATED ALWAYS AS IDENTITY(START WITH 5000, INCREMENT BY 1),
    productID int NOT NULL,
    customerID int NOT NULL,
    productName varchar(50) NOT NULL,
    productQuantity int NOT NULL,
    dateOrdered date NOT NULL,
    orderTotal float NOT NULL,
    PRIMARY KEY (orderID),
    FOREIGN KEY (customerID) REFERENCES CUSTOMERTABLE(customerID)
);
ALTER TABLE CUSTOMERTABLE
ADD FOREIGN KEY (orderID) REFERENCES ORDERTABLE(orderID);

CREATE TABLE PRODUCTTABLE(
    productID int NOT NULL GENERATED ALWAYS AS IDENTITY(START WITH 3000, INCREMENT BY 1),
    productName varchar(50) NOT NULL,
    productDescription varchar(200) NOT NULL,
    productCategory varchar(30) NOT NULL,
    productPrice float NOT NULL,
    productStock int NOT NULL,
    PRIMARY KEY (productID),
);
ALTER TABLE ORDERTABLE
ADD FOREIGN KEY (productID) REFERENCES ORDERLINETABLE(productID);

ALTER TABLE ORDERLINETABLE
ADD FOREIGN KEY (orderID) REFERENCES ORDERTABLE(orderID),
ADD FOREIGN KEY (productID) REFERENCES PRODUCTTABLE(productID);

CREATE TABLE INVOICETABLE(
    invoiceID int NOT NULL GENERATED ALWAYS AS IDENTITY(START WITH 7000, INCREMENT BY 1),
    orderID int NOT NULL,
    productName varchar(50) NOT NULL,
    productQuantity int NOT NULL,
    dateOrdered date NOT NULL,
    orderTotal float NOT NULL,
    deliveryAddress varchar(100) NOT NULL,
    billingAddress varchar(100) NOT NULL,
    PRIMARY KEY (invoiceID),
    FOREIGN KEY (orderID) REFERENCES ORDERTABLE(orderID)
);

CREATE TABLE PAYMENTTABLE(
    paymentID int NOT NULL GENERATED ALWAYS AS IDENTITY(START WITH 8000, INCREMENT BY 1),
    orderID int NOT NULL,
    paymentType int NOT NULL,
    PRIMARY KEY (paymentID),
    FOREIGN KEY (orderID) REFERENCES ORDERTABLE(orderID)
);

CREATE TABLE SHIPPINGTABLE(
    shipmentID int NOT NULL GENERATED ALWAYS AS IDENTITY(START WITH 9000, INCREMENT BY 1),
    orderID int NOT NULL,
    shippingToken varchar(1000) NOT NULL,
    PRIMARY KEY (shipmentID),
    FOREIGN KEY (orderID) REFERENCES ORDERTABLE(orderID)
);

CREATE TABLE CREDITCARDTABLE(
    paymentID int NOT NULL GENERATED ALWAYS AS IDENTITY(START WITH 8100, INCREMENT BY 1),
    CardID int NOT NULL, 
    cardNumber varchar(40) NOT NULL,
    expiryDate date NOT NULL,
    holderName varchar(50) NOT NULL,
    CVV int NOT NULL,
    PRIMARY KEY (CardID),
    FOREIGN KEY (paymentID) REFERENCES PAYMENTTABLE(paymentID)
);

CREATE TABLE PAYPALTABLE(
    paypalID int NOT NULL GENERATED ALWAYS AS IDENTITY(START WITH 8200, INCREMENT BY 1),
    paymentID int NOT NULL,
    paypalToken varchar(200) NOT NULL,
    PRIMARY KEY (paypalID),
    FOREIGN KEY (paymentID) REFERENCES PAYMENTTABLE(paymentID)
);
